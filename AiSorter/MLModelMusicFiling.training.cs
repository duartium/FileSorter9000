﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace AiSorter
{
    public partial class MLModelMusicFiling
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@"FirstGenre", @"FirstGenre")      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"Title", @"Title"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"Album", @"Album"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"FirstArtist", @"FirstArtist"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"FirstAlbumArtist", @"FirstAlbumArtist"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"FileName", @"FileName"))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"FirstGenre",@"Title",@"Album",@"FirstArtist",@"FirstAlbumArtist",@"FileName"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(@"FolderPath", @"FolderPath"))      
                                    .Append(mlContext.Transforms.NormalizeMinMax(@"Features", @"Features"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(l1Regularization:0.0596089255001209F,l2Regularization:0.0929966840417537F,labelColumnName:@"FolderPath",featureColumnName:@"Features"))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(@"PredictedLabel", @"PredictedLabel"));

            return pipeline;
        }
    }
}
